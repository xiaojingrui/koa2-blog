-- --------------------------------------------------------
-- 主机:                           127.0.0.1
-- 服务器版本:                        5.7.20-log - MySQL Community Server (GPL)
-- 服务器操作系统:                      Win64
-- HeidiSQL 版本:                  9.4.0.5125
-- --------------------------------------------------------

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET NAMES utf8 */;
/*!50503 SET NAMES utf8mb4 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;


-- 导出 my_blog 的数据库结构
CREATE DATABASE IF NOT EXISTS `my_blog` /*!40100 DEFAULT CHARACTER SET utf8 */;
USE `my_blog`;

-- 导出  表 my_blog.blog_article 结构
CREATE TABLE IF NOT EXISTS `blog_article` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `uid` int(11) NOT NULL,
  `title` varchar(40) NOT NULL,
  `content` longtext NOT NULL,
  `intro` text NOT NULL,
  `post_time` datetime NOT NULL,
  `update_time` datetime NOT NULL,
  `last_comment_time` datetime DEFAULT NULL,
  `hit_pv` int(11) DEFAULT '0',
  `comment_pv` int(11) DEFAULT '0',
  `isDeleted` int(11) DEFAULT '0' COMMENT '0未删除，1删除',
  `author` varchar(50) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `article_user_fk` (`uid`),
  CONSTRAINT `article_user_fk` FOREIGN KEY (`uid`) REFERENCES `blog_user` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8;

-- 正在导出表  my_blog.blog_article 的数据：~25 rows (大约)
/*!40000 ALTER TABLE `blog_article` DISABLE KEYS */;
INSERT INTO `blog_article` (`id`, `uid`, `title`, `content`, `intro`, `post_time`, `update_time`, `last_comment_time`, `hit_pv`, `comment_pv`, `isDeleted`, `author`) VALUES
    (1, 1, '学习记录asdad', '<h1 id="js" style="margin: 10px 0px; padding: 0px; font-size: 28px; line-height: 1.5; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">一些js基本知识点</h1><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="doctype" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">Doctype 浏览器渲染模式</h2></blockquote><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p>渲染模式发展历史</p></li></ul><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);"><code style="margin: 0px; padding: 0px;">在多年以前（IE6诞生以前），各浏览器都处于各自比较封闭的发展中（基本没有兼容性可谈）。随着WEB的发展，兼容性问题的解决越来越显得迫切，随即，各浏览器厂商发布了按照标准模式（遵循各厂商制定的统一标准）工作的浏览器，比如IE6就是其中之一。但是考虑到以前建设的网站并不支持标准模式，所以各浏览器在加入标准模式的同时也保留了混杂模式（即以前那种未按照统一标准工作的模式，也叫怪异模式）。</code></p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">&#39;</p><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">标准模式（不兼容之前的语法）</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">html 4.0</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5;"><code style="margin: 0px; padding: 0px;">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</code></p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">xhtml 1.0</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5;"><code style="margin: 0px; padding: 0px;">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</code></p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">html5</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5;"><code style="margin: 0px; padding: 0px;">&lt;!DOCTYPE html&gt;</code></p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;"><strong style="margin: 0px; padding: 0px;">P.S.</strong><span class="Apple-converted-space" style="margin: 0px; padding: 0px; line-height: 1.5;">&nbsp;细心的你可以看出随着html版本的发展，标准模式的写法也在变化着</span></p></li></ul><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">怪异模式 / 混杂模式</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">很简单，将开头标准模式的声明去掉即可</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">IE6的怪异模式，有个新的盒模型，border和padding都属于宽高的范畴</p></li></ul></ul><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="label" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">label</h2></blockquote><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">label中有一个for属性，可以将该label和一个input绑定，当我们点击该label的文字时，input也回聚焦</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">for 属性　— &gt;　 js中表示htmlFor</p></li></ul><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">&lt;label&nbsp;for=&quot;input&quot;&gt;User:&lt;/label&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;&lt;input&nbsp;id=&quot;input&quot;&nbsp;type=&quot;text&quot;&nbsp;name=&quot;user&quot;&nbsp;value=&quot;&quot;&nbsp;placeholder=&quot;请输入用户名&quot;&nbsp;/&gt;</pre><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">&nbsp;</p><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">图片预加载</h2></blockquote><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">假设这样一种需求，在文档加载完毕后的某个时刻，可能几秒后，可能几分钟后，也可能半小时后，我们要通过js动态插入一张10M的大图片？</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">会产生这样的问题？图片太大，网速又不快，所以图片加载需要很长时间，所以导致页面上的那个图片只呈现了部分，甚至没有呈现，一片空白，形成了极其差的用户体验。</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">如何解决呢？那就是图片预加载，在图片还没动态插入之前，我们就创造img节点，并为之设置src，在设置src后，浏览器就会开始下载src上的资源，然后在我们需要的时候即可瞬间插入文档</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">启发？在请求的资源需要加载很长时间的情况下，我们可以预加载，在需要使用的时候，直接用就可以，极大提高了用户体验</p></li></ul><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="getelementsbyclassname-ie8" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">封装　getElementsByClassName(); IE8及以下不兼容</h2></blockquote><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">类名、id名不像js标识符命名那么规范，尽量别用特殊字符就行</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">js标识符规范，由字母，数字，下划线，$ 组成，但不能以数字开头</p></li></ul><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5;"><a title="复制代码" style="margin: 0px; padding: 0px; color: rgb(7, 93, 179); text-decoration-line: underline; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="margin: 0px; padding: 0px; max-width: 900px; border: none !important;"/></a></span></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">//&nbsp;封装js中的getElenmentsByClassName();\n&nbsp;&nbsp;&nbsp;&nbsp;Document.prototype.getByClassName&nbsp;=&nbsp;function&nbsp;(className)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;allEle&nbsp;=&nbsp;document.getElementsByTagName(&#39;*&#39;);&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;retArr&nbsp;=&nbsp;{\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;length:&nbsp;0,\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;push:&nbsp;Array.prototype.push\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;};&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;len&nbsp;=&nbsp;allEle.length;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;regBlank&nbsp;=&nbsp;/^s|s$/g;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;for(var&nbsp;i&nbsp;=&nbsp;0;&nbsp;i&nbsp;&lt;&nbsp;len;&nbsp;i++)&nbsp;{&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;strForClass&nbsp;=&nbsp;allEle[i].className\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;allEle[i].className&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp;&nbsp;allEle[i].className.replace(regBlank,&nbsp;&#39;&#39;).indexOf(className)&nbsp;!==&nbsp;-1&nbsp;\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&amp;&amp;&nbsp;retArr.push(allEle[i]);\n&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;return&nbsp;retArr;\n&nbsp;&nbsp;&nbsp;&nbsp;}</pre><p><span class="cnblogs_code_copy" style="margin: 0px; padding: 0px 5px 0px 0px; line-height: 1.5;"><a title="复制代码" style="margin: 0px; padding: 0px; color: rgb(7, 93, 179); text-decoration-line: underline; border: none !important;"><img src="http://common.cnblogs.com/images/copycode.gif" alt="复制代码" style="margin: 0px; padding: 0px; max-width: 900px; border: none !important;"/></a></span></p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">&nbsp;</p><pre class="hljs" style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-size: 13px; background-color: rgb(254, 254, 242);">&nbsp;<br/></pre><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="math" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">Math对象</h2></blockquote><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">Math.sqrt()</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p>开方</p></li></ul><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">Math.floor()</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p>向下取整</p></li></ul><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">Math .ceil()</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p>向上取整</p></li></ul><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">Math.random()</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">Math.random()　　(0, 1)</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">eg： (5, 15)　－》　Math.random() * 10 + 5</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">先看区间 15 - 5 = 10</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">再看起始点 5</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">所以Math.random() * 10 + 5</p></li></ul></ul><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">文档碎片</h2></blockquote><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">每次我们操作dom都会引起Reflow 或 Repaint，所以过多次的dom操作会降低性能</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">但是我们可以将一些dom操作集合起来再操作dom，可减少Reflow或Repaint</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">创建文档碎片</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">var frag = document.createDocumentFragment();</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">该碎片具有正常dom节点的所有方法</p></li></ul></ul><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">&nbsp;var&nbsp;frag&nbsp;=&nbsp;document.createDocumentFragment();&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;div&nbsp;=&nbsp;document.createElement(&#39;div&#39;);&nbsp;&nbsp;&nbsp;&nbsp;var&nbsp;span&nbsp;=&nbsp;document.createElement(&#39;span&#39;);\n&nbsp;&nbsp;&nbsp;&nbsp;frag.sppendChild(div);\n&nbsp;&nbsp;&nbsp;&nbsp;frag.appendChild(span);\n&nbsp;&nbsp;&nbsp;&nbsp;document.body.appendChild(frag);</pre><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">&nbsp;</p><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="cdn" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">cdn</h2></blockquote><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">基站</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">CDN的全称是Content Delivery Network，即内容分发网络。</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">原理：</p></li></ul><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-size: 13px; background-color: rgb(254, 254, 242);"><code style="margin: 0px; padding: 0px;">简单地说，内容分发网络(CDN)是一个经策略性部署的整体系统，包括分布式存储、负载均衡、网络请求的重定向和内容管理4个要件，而内容管理和全局的网络流量管理(Traffic Management)是CDN的核心所在。<br style="margin: 0px; padding: 0px;"/>通过用户就近性和服务器负载的判断，CDN确保内容以一种极为高效的方式为用户的请求提供服务。总的来说，内容服务基于缓存服务器，也称作代理缓存(Surrogate)，<br style="margin: 0px; padding: 0px;"/>它位于网络的边缘，距用户仅有&quot;一跳&quot;(Single Hop)之遥。同时，代理缓存是内容提供商源服务器（通常位于CDN服务提供商的数据中心）的一个透明镜像。<br style="margin: 0px; padding: 0px;"/>这样的架构使得CDN服务提供商能够代表他们客户，即内容供应商，向最终用户提供尽可能好的体验，而这些用户是不能容忍请求响应时间有任何延迟的。</code></pre><p><br/></p>', '这是文本这是文asdad本', '2017-12-21 15:53:16', '2017-12-21 15:43:16', NULL, 3, 0, 1, 'liyanlei'),
    (2, 1, '学习记录111ahhaha萨达', '<blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="doctype" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">Doctype 浏览器渲染模式</h2></blockquote><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p>渲染模式发展历史</p></li></ul><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);"><code style="margin: 0px; padding: 0px;">在多年以前（IE6诞生以前），各浏览器都处于各自比较封闭的发展中（基本没有兼容性可谈）。随着WEB的发展，兼容性问题的解决越来越显得迫切，随即，各浏览器厂商发布了按照标准模式（遵循各厂商制定的统一标准）工作的浏览器，比如IE6就是其中之一。但是考虑到以前建设的网站并不支持标准模式，所以各浏览器在加入标准模式的同时也保留了混杂模式（即以前那种未按照统一标准工作的模式，也叫怪异模式）。</code></p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">&#39;</p><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">标准模式（不兼容之前的语法）</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">html 4.0</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5;"><code style="margin: 0px; padding: 0px;">&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&quot; &quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;</code></p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">xhtml 1.0</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5;"><code style="margin: 0px; padding: 0px;">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD XHTML 1.0 Strict//EN&quot; &quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</code></p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">html5</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5;"><code style="margin: 0px; padding: 0px;">&lt;!DOCTYPE html&gt;</code></p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;"><strong style="margin: 0px; padding: 0px;">P.S.</strong><span class="Apple-converted-space" style="margin: 0px; padding: 0px; line-height: 1.5;">&nbsp;细心的你可以看出随着html版本的发展，标准模式的写法也在变化着</span></p></li></ul><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">怪异模式 / 混杂模式</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">很简单，将开头标准模式的声明去掉即可</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">IE6的怪异模式，有个新的盒模型，border和padding都属于宽高的范畴</p></li></ul></ul><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="label" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">label</h2></blockquote><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">label中有一个for属性，可以将该label和一个input绑定，当我们点击该label的文字时，input也回聚焦</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">for 属性　— &gt;　 js中表示htmlFor</p></li></ul><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">&lt;label&nbsp;for=&quot;input&quot;&gt;User:&lt;/label&gt;</pre>', 'Doctype 浏览器渲染模式渲染模式发展历史在多年以前（IE6诞生以前），各浏览器都处于各自比较封闭的发展中（基本没有兼容性可谈）。随着WEB的发展，兼容性问题的解决越来越显得迫切，随即，各浏览器厂商发布了按照标准模式（遵循各厂商制定的统一标准）工作的浏览器，比如IE6就是其中之一。但是考虑到以前建设的网站并不支持标准模式，所以各浏览器在加入标准模式的同时也保留了混杂模式（即以前那种未按照统一标准工作的模式，也叫怪异模式）。&#39;标准模式（不兼容之前的语法）html 4.0&lt;!DOCTYPE HTML PUBLIC &quot;-//W3C//DTD HTML 4.01//EN&q', '2017-12-21 15:53:16', '2018-01-03 19:05:16', '2018-01-03 20:58:31', 7, 0, 0, 'liyanlei'),
    (3, 1, '学习记录222', '这是文本你本这是文本这是文本你', '这是文本这是文本', '2017-12-21 15:53:16', '2017-12-21 15:53:16', NULL, 0, 0, 1, 'liyanlei'),
    (4, 1, '学习记录333', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (5, 1, '学习记录3331', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (6, 1, '学习记录3332', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (7, 1, '学习记录3333sad ', '<p>测试文本asda&nbsp;</p>', '测试文本asda&nbsp;', '2017-12-22 13:57:15', '2018-01-02 16:25:27', NULL, 0, 0, 0, 'liyanlei'),
    (8, 1, '学习记录3334', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (9, 1, '学习记录3335', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (10, 1, '学习记录3336', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (11, 1, '学习记录3337', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (12, 1, '学习记录3338', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (13, 1, '学习记录3339', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (14, 1, '学习记录33310', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (15, 1, '学习记录33311', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (16, 1, '学习记录33312', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (17, 1, '学习记录33313', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (18, 1, '学习记录33314', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (19, 1, '学习记录33315', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (20, 1, '学习记录33316', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (21, 1, '学习记录33317', '测试文本', '测试文本', '2017-12-22 13:57:15', '2017-12-22 13:57:17', NULL, 0, 0, 0, 'liyanlei'),
    (22, 1, 'xxxx', 'xxx', 'xxxx', '2018-01-02 13:47:36', '2018-01-02 13:47:38', NULL, 0, 0, 0, 'liyanlei'),
    (23, 1, '11111111111111', '<p>1111111111111</p>', '1111111111111', '2018-01-02 14:36:39', '2018-01-02 14:36:39', NULL, 0, 0, 0, 'liyanlei'),
    (24, 1, 'test', '<blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="ie" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">标准盒模型和ie盒模型（怪异盒模型）</h2></blockquote><ol style="padding: 0px 0px 0px 40px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">w3c标准盒模型</p></li><ul style="margin-left: 30px; padding: 0px; word-break: break-all;" class=" list-paddingleft-2"><li><p>width和height不包括padding和border</p></li></ul><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">ie盒模型</p></li><ul style="margin-left: 30px; padding: 0px; word-break: break-all;" class=" list-paddingleft-2"><li><p>width和height包含padding和border</p></li></ul></ol><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p>ie8以上都是w3c标准盒模型 &nbsp; &nbsp;ie5极其以下都是ie盒子模型，ie6、ie7、ie8在混杂模式下ie盒模型，在标准模式下是w3c标准盒模型<br style="margin: 0px; padding: 0px;"/>(注意：ie6在混杂模式下一定是Ie盒模型，而ie7、ie8在混杂模式下不一定是ie盒模型)</p></li></ul><ul style="margin-left: 30px; padding: 0px; word-break: break-all; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">css3中的box-sizing</p></li><ul style="list-style-type: square;" class=" list-paddingleft-2"><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">content-box w3c标准盒模型</p></li><li><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">boder-box IE盒模型 / 怪异盒模型</p></li></ul></ul><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">混杂模式和标准模式</h2></blockquote><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">在多年以前（IE6诞生以前），各浏览器都处于各自比较封闭的发展中（基本没有兼容性可谈）。随着WEB的发展，兼容性问题的解决越来</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">越显得迫切，随即，各浏览器厂商发布了按照标准模式（遵循各厂商制定的统一标准）工作的浏览器，比如IE6就是其中之一。但是考虑到以</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">前建设的网站并不支持标准模式，所以各浏览器在加入标准模式的同时也保留了混杂模式（即以前那种未按照统一标准工作的模式，也叫怪</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">异模式）。经过多年的发展，后来又出现了<strong style="margin: 0px; padding: 0px;">近似标准模式</strong>（在一种模式中同时融入标准模式和部分混杂模式的特性，也称为接近标准模式、</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">准标准模式、最有限混杂模式）和<strong style="margin: 0px; padding: 0px;">超级标准模式</strong>（<strong style="margin: 0px; padding: 0px;">近似标准模式、标准模式、超级标准模式三者也共同被称作标准模式</strong>）。因此，浏览器的</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">模式可以分为两类：标准模式和混杂模式，其中，标准模式又可更严格的分为近似标准模式、标准模式、超级标准模式。</p><ol style="padding: 0px 0px 0px 40px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p>混杂模式会让IE的行为与（包含非标准特性的）IE5相同<br style="margin: 0px; padding: 0px;"/>而标准模式会让IE的行为贴近W3C标准</p></li></ol><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">&nbsp;1.&lt;!DOCTYPE&nbsp;html&gt;\n&nbsp;2.&lt;!DOCTYPE&nbsp;HTML&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;HTML&nbsp;4.01//EN&quot;&nbsp;&quot;http://www.w3.org/TR/html4/strict.dtd&quot;&gt;\n&nbsp;3.&lt;!DOCTYPE&nbsp;html&nbsp;PUBLIC&nbsp;&quot;-//W3C//DTD&nbsp;XHTML&nbsp;1.0&nbsp;Strict//EN&quot;&nbsp;&quot;http://www.w3.org/TR/xhtml1/DTD/xhtml1-strict.dtd&quot;&gt;</pre><ol start="2" style="padding: 0px 0px 0px 40px; font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal; background-color: rgb(254, 254, 242);" class=" list-paddingleft-2"><li><p>标准模式可以通过doctype 和 严格型（strict）声明来开启。<br style="margin: 0px; padding: 0px;"/>而混杂模式可以通过过渡性（transitional）和框架集型（frameset）声明来开启</p></li></ol><blockquote style="margin: 10px 0px; padding: 5px 10px; background: none rgb(254, 254, 242); border: 2px solid rgb(239, 239, 239); line-height: 1.6em; color: rgb(51, 51, 51); font-family: Verdana, Arial, Helvetica, sans-serif; font-size: 13px; white-space: normal;"><h2 id="ie" style="margin: 10px 0px; padding: 0px; font-size: 21px; line-height: 1.5;">IE注释判断语句</h2></blockquote><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">IE特有功能，通过HTML注释中的条件语句然不同的IE版本识别注释中的内容，这对IE的hacks很有帮助。</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">1)<code style="margin: 0px; padding: 0px;">&lt;!--[if lt IE 7]&gt; : 小于 IE7 的版本 ( Less than );</code></p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">2)<code style="margin: 0px; padding: 0px;">&lt;!--[if lte IE 7]&gt; : 小于或等于 IE7 的版本 ( Less than or equal );</code></p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">3)<code style="margin: 0px; padding: 0px;">&lt;!--[if gt IE 7]&gt; : 大于 IE7 的版本 ( Greater than );</code></p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">4)<code style="margin: 0px; padding: 0px;">&lt;!--[if gte IE 7]&gt; : 大于或等于 IE7 的版本 ( Greater than or equal );</code></p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">5)<code style="margin: 0px; padding: 0px;">&lt;!--[if !IE 7]&gt; : 不等于 IE7 的版本 ( Not );</code></p><p style="margin: 10px auto; padding: 0px; line-height: 1.5; font-size: 13px; font-family: Verdana, Arial, Helvetica, sans-serif; white-space: normal; background-color: rgb(254, 254, 242);">6)<code style="margin: 0px; padding: 0px;">&lt;!--[if !IE]&gt; :不等于 IE 的版本 ( equal );</code></p><pre style="margin-top: 0px; margin-bottom: 0px; padding: 0px; white-space: pre-wrap; word-wrap: break-word; font-family: &quot;Courier New&quot; !important;">&nbsp;&nbsp;&nbsp;&lt;!--[if&nbsp;IE&nbsp;6]&gt;\n&nbsp;&nbsp;&nbsp;&nbsp;Only&nbsp;recognized&nbsp;in&nbsp;IE7;\n&nbsp;&nbsp;&nbsp;&nbsp;只能被IE7识别\n&nbsp;&nbsp;&nbsp;&nbsp;此处可以填样式&nbsp;&nbsp;&nbsp;&nbsp;&lt;![endif]&gt;</pre><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">&nbsp;</p><p style="margin: 10px auto; padding: 0px; line-height: 1.5;">--------------------------------------end</p><p><br/></p>', '标准盒模型和ie盒模型（怪异盒模型）w3c标准盒模型width和height不包括padding和borderie盒模型width和height包含padding和borderie8以上都是w3c标准盒模型 &nbsp; &nbsp;ie5极其以下都是ie盒子模型，ie6、ie7、ie8在混杂模式下ie盒模型，在标准模式下是w3c标准盒模型(注意：ie6在混杂模式下一定是Ie盒模型，而ie7、ie8在混杂模式下不一定是ie盒模型)css3中的box-sizingcontent-box w3c标准盒模型boder-box IE盒模型 / 怪异盒模型混杂模式和标准模式在多年以前（IE6诞生以前），', '2018-01-02 14:58:44', '2018-01-02 14:58:44', NULL, 0, 0, 0, 'liyanlei'),
    (25, 1, 'asd', '<p>萨达<br/></p>', '萨达', '2018-01-02 16:28:24', '2018-01-02 16:28:24', NULL, 0, 0, 0, 'liyanlei'),
    (26, 2, 'bsbwbsbwbsbwbsbwbsbwbsbwbsbw', '<p>bsbwbsbwbsbwbsbwbsbwbsbwbsbwbsbw</p>', 'bsbwbsbwbsbwbsbwbsbwbsbwbsbwbsbw', '2018-01-03 18:05:12', '2018-01-03 18:05:12', NULL, 0, 0, 1, 'bsbw');
/*!40000 ALTER TABLE `blog_article` ENABLE KEYS */;

-- 导出  表 my_blog.blog_comment 结构
CREATE TABLE IF NOT EXISTS `blog_comment` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `aid` int(11) NOT NULL,
  `content` text NOT NULL,
  `create_time` date NOT NULL,
  `uid` int(11) NOT NULL,
  `commentar` varchar(50) NOT NULL,
  PRIMARY KEY (`id`),
  KEY `comment_article_fk` (`aid`),
  CONSTRAINT `comment_article_fk` FOREIGN KEY (`aid`) REFERENCES `blog_article` (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=14 DEFAULT CHARSET=utf8;

-- 正在导出表  my_blog.blog_comment 的数据：~13 rows (大约)
/*!40000 ALTER TABLE `blog_comment` DISABLE KEYS */;
INSERT INTO `blog_comment` (`id`, `aid`, `content`, `create_time`, `uid`, `commentar`) VALUES
    (1, 2, '<p>你好~</p>', '2018-01-03', 2, 'bsbw'),
    (2, 2, '<p>按时大大</p>', '2018-01-03', 2, 'bsbw'),
    (3, 2, '<p>撒打算</p>', '2018-01-03', 2, 'bsbw'),
    (4, 2, '<p>撒大声地萨达</p>', '2018-01-03', 2, 'bsbw'),
    (5, 2, '<p>撒大声地萨达</p>', '2018-01-03', 2, 'bsbw'),
    (6, 2, '<p>阿斯顿</p>', '2018-01-03', 2, 'bsbw'),
    (7, 2, '<p>阿斯顿萨达</p>', '2018-01-03', 2, 'bsbw'),
    (8, 2, '<p>阿斯顿萨达</p>', '2018-01-03', 2, 'bsbw'),
    (9, 2, '<p>阿斯顿萨达</p>', '2018-01-03', 2, 'bsbw'),
    (10, 2, '<p>阿斯顿萨达</p>', '2018-01-03', 2, 'bsbw'),
    (11, 2, '<p>阿斯顿萨达</p>', '2018-01-03', 2, 'bsbw'),
    (12, 2, '<p>啊啊啊啊</p>', '2018-01-03', 2, 'bsbw'),
    (13, 2, '<p>asda adad</p>', '2018-01-03', 1, 'liyanlei');
/*!40000 ALTER TABLE `blog_comment` ENABLE KEYS */;

-- 导出  表 my_blog.blog_user 结构
CREATE TABLE IF NOT EXISTS `blog_user` (
  `id` int(11) NOT NULL AUTO_INCREMENT,
  `username` varchar(20) NOT NULL,
  `password` varchar(100) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8;

-- 正在导出表  my_blog.blog_user 的数据：~1 rows (大约)
/*!40000 ALTER TABLE `blog_user` DISABLE KEYS */;
INSERT INTO `blog_user` (`id`, `username`, `password`) VALUES
    (1, 'liyanlei', '493cbbd4a7068ec6e34e93c09cf43ea4'),
    (2, 'bsbw', '9ad482c0dcda17124311ee2e7519fe93');
/*!40000 ALTER TABLE `blog_user` ENABLE KEYS */;

-- 导出  表 my_blog._mysql_session_store 结构
CREATE TABLE IF NOT EXISTS `_mysql_session_store` (
  `id` varchar(255) NOT NULL,
  `expires` bigint(20) DEFAULT NULL,
  `data` text,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

-- 正在导出表  my_blog._mysql_session_store 的数据：~13 rows (大约)
/*!40000 ALTER TABLE `_mysql_session_store` DISABLE KEYS */;
INSERT INTO `_mysql_session_store` (`id`, `expires`, `data`) VALUES
    ('USER_SID:0W1dWhRY_Jt6YGJ-TuiyTQOzSXkrHSTS', 1515047836739, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:Akf0nL4Tr2QmsTuCe6RQ1Akpr1vbW_cp', 1515155276019, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:D_e-1zEx-gNx0wdVXCxDF38gTKMPWsZl', 1513928826853, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:eD2HWlMh55xFc50Wjwbcnu094P8EykzW', 1513927575556, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:Lii22UQnsApPRswFKQfLwcgUtLNue9Zg', 1513771389361, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:mmPpLSFv6n0V7MvAUkOxZQfjDpsBm2av', 1515146680855, '{"isLogin":true,"userName":"bsbw","userId":2}'),
    ('USER_SID:mnLrBJgzUG9AgRRSqWX6tK4R_TFZwcxe', 1515154716332, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:NjUII_CdqpxmrwKfU8LdbqctwBfMoPQN', 1515155100621, '{"isLogin":true,"userName":"bsbw","userId":2}'),
    ('USER_SID:pChZWz-cRu68hWAPGjyieCfwzjUiGDdJ', 1513841935181, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:uJdEneH4bVP7H_-Rw8EXheuokoaA9nLG', 1515029901561, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:wSduaSU014aCNdIRoKsc7TWcJPVelL_b', 1515060728506, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:ZEJzqr1fjG3XfcR672yIokegq7ACeN8w', 1515054194464, '{"isLogin":true,"userName":"liyanlei","userId":1}'),
    ('USER_SID:_HIdvHbmWw5jjOqICUb08o21r2PqfGse', 1515046502771, '{"isLogin":true,"userName":"liyanlei","userId":1}');
/*!40000 ALTER TABLE `_mysql_session_store` ENABLE KEYS */;

/*!40101 SET SQL_MODE=IFNULL(@OLD_SQL_MODE, '') */;
/*!40014 SET FOREIGN_KEY_CHECKS=IF(@OLD_FOREIGN_KEY_CHECKS IS NULL, 1, @OLD_FOREIGN_KEY_CHECKS) */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;